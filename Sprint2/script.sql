-- MySQL Script generated by MySQL Workbench
-- Sat Oct  1 09:51:58 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`apartamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`apartamento` (
  `apartamento_id` INT NOT NULL,
  `apartamento_name` VARCHAR(45) NOT NULL,
  `apartamento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`apartamento_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `user_id` INT NOT NULL,
  `user_name` VARCHAR(45) NOT NULL,
  `user_password` VARCHAR(45) NOT NULL,
  `user_active` VARCHAR(45) NOT NULL,
  `user_created_at` VARCHAR(45) NOT NULL,
  `apartamento_apartamento_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `apartamento_apartamento_id`),
  INDEX `fk_user_apartamento1_idx` (`apartamento_apartamento_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_apartamento1`
    FOREIGN KEY (`apartamento_apartamento_id`)
    REFERENCES `mydb`.`apartamento` (`apartamento_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`document_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`document_type` (
  `document_type_id` INT NOT NULL,
  `document_type_name` VARCHAR(45) NOT NULL,
  `document_type_active` VARCHAR(45) NOT NULL,
  `created_at` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`document_type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`person` (
  `person_id` INT NOT NULL,
  `person_name` VARCHAR(45) NOT NULL,
  `person_lastname` VARCHAR(45) NULL,
  `person_document_number` VARCHAR(45) NOT NULL,
  `person_phone` VARCHAR(45) NULL,
  `person_email` VARCHAR(45) NOT NULL,
  `person_created_at` VARCHAR(45) NOT NULL,
  `user_user_id` INT NOT NULL,
  `document_type_document_type_id` INT NOT NULL,
  PRIMARY KEY (`person_id`, `user_user_id`, `document_type_document_type_id`),
  INDEX `fk_person_user_idx` (`user_user_id` ASC) VISIBLE,
  INDEX `fk_person_document_type1_idx` (`document_type_document_type_id` ASC) VISIBLE,
  CONSTRAINT `fk_person_user`
    FOREIGN KEY (`user_user_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_document_type1`
    FOREIGN KEY (`document_type_document_type_id`)
    REFERENCES `mydb`.`document_type` (`document_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`role` (
  `id_role` INT NOT NULL,
  `role_name` VARCHAR(45) NOT NULL,
  `role_active` VARCHAR(45) NOT NULL,
  `role_created_at` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_role`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_role` (
  `user_role_id` INT NOT NULL,
  `user_user_id` INT NOT NULL,
  `role_id_role` INT NOT NULL,
  PRIMARY KEY (`user_role_id`, `user_user_id`, `role_id_role`),
  INDEX `fk_user_role_user1_idx` (`user_user_id` ASC) VISIBLE,
  INDEX `fk_user_role_role1_idx` (`role_id_role` ASC) VISIBLE,
  CONSTRAINT `fk_user_role_user1`
    FOREIGN KEY (`user_user_id`)
    REFERENCES `mydb`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_role1`
    FOREIGN KEY (`role_id_role`)
    REFERENCES `mydb`.`role` (`id_role`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`conjunto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`conjunto` (
  `conjunto_id` INT NOT NULL,
  `conjunto_name` VARCHAR(45) NOT NULL,
  `apartamento_apartamento_id` INT NOT NULL,
  PRIMARY KEY (`conjunto_id`, `apartamento_apartamento_id`),
  INDEX `fk_conjunto_apartamento1_idx` (`apartamento_apartamento_id` ASC) VISIBLE,
  CONSTRAINT `fk_conjunto_apartamento1`
    FOREIGN KEY (`apartamento_apartamento_id`)
    REFERENCES `mydb`.`apartamento` (`apartamento_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`payment` (
  `payment_id` INT NOT NULL,
  `payment_reference` VARCHAR(45) NOT NULL,
  `payment_person_name` VARCHAR(45) NOT NULL,
  `payment_person_email` VARCHAR(45) NOT NULL,
  `payment_reference` VARCHAR(45) NOT NULL,
  `payment_status` VARCHAR(45) NOT NULL,
  `created_at` VARCHAR(45) NOT NULL,
  `apartamento_apartamento_id` INT NOT NULL,
  PRIMARY KEY (`payment_id`, `apartamento_apartamento_id`),
  INDEX `fk_payment_apartamento1_idx` (`apartamento_apartamento_id` ASC) VISIBLE,
  CONSTRAINT `fk_payment_apartamento1`
    FOREIGN KEY (`apartamento_apartamento_id`)
    REFERENCES `mydb`.`apartamento` (`apartamento_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
